package miniRaknareClass;

import java.awt.Color;


public class MiniRaknareClass extends javax.swing.JFrame {

    /**
     * Creates new form MiniRaknareClass
     */
    public MiniRaknareClass() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFak = new javax.swing.JButton();
        btnDivByX = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btnChangeSign = new javax.swing.JButton();
        btnSquare = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnPower = new javax.swing.JButton();
        btnDiv = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        btnMult = new javax.swing.JButton();
        btnSub = new javax.swing.JButton();
        btnQube = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btnDecimal = new javax.swing.JButton();
        btnMSub = new javax.swing.JButton();
        btnMAdd = new javax.swing.JButton();
        btnMR = new javax.swing.JButton();
        btnMC = new javax.swing.JButton();
        txfMain = new javax.swing.JTextField();
        txfAns = new javax.swing.JTextField();
        lblMem = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        btnSqrt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnFak.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnFak.setText("n!");
        btnFak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFakActionPerformed(evt);
            }
        });

        btnDivByX.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnDivByX.setText("1/x");
        btnDivByX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivByXActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btnChangeSign.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnChangeSign.setText("+/-");
        btnChangeSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeSignActionPerformed(evt);
            }
        });

        btnSquare.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnSquare.setText("x^2");
        btnSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSquareActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn0.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnPower.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnPower.setText("x^y");
        btnPower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowerActionPerformed(evt);
            }
        });

        btnDiv.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnDiv.setText("รท");
        btnDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivActionPerformed(evt);
            }
        });

        btnC.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnC.setText("C");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        btnMult.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnMult.setText("X");
        btnMult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultActionPerformed(evt);
            }
        });

        btnSub.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnSub.setText("-");
        btnSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubActionPerformed(evt);
            }
        });

        btnQube.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnQube.setText("x^3");
        btnQube.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQubeActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnAdd.setText("+");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btnEquals.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnEquals.setText("=");
        btnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualsActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btnDecimal.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnDecimal.setText(".");
        btnDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecimalActionPerformed(evt);
            }
        });

        btnMSub.setText("M-");
        btnMSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMSubActionPerformed(evt);
            }
        });

        btnMAdd.setText("M+");
        btnMAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMAddActionPerformed(evt);
            }
        });

        btnMR.setText("MR");
        btnMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMRActionPerformed(evt);
            }
        });

        btnMC.setText("MC");
        btnMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMCActionPerformed(evt);
            }
        });

        txfMain.setFont(new java.awt.Font("Dialog", 0, 48)); // NOI18N

        txfAns.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        txfAns.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblMem.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblMem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMem.setOpaque(true);

        lblError.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblError.setForeground(new java.awt.Color(222, 0, 0));
        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnSqrt.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        btnSqrt.setText("sqrt");
        btnSqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSqrtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfMain, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnFak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDivByX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnChangeSign, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnMC, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnSquare, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSqrt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnQube, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnMR, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnMAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPower, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnMult, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSub, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnMSub, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lblMem, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txfAns, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfAns, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblMem, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfMain, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMR)
                    .addComponent(btnMAdd)
                    .addComponent(btnMSub)
                    .addComponent(btnMC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPower, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMult, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSub, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQube, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btnSquare, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFak, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDivByX, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChangeSign, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFakActionPerformed
        lblError.setText("");
        one_calc_buttons('!');
    }//GEN-LAST:event_btnFakActionPerformed

    private void btnDivByXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivByXActionPerformed
        lblError.setText("");
        one_calc_buttons('/');
    }//GEN-LAST:event_btnDivByXActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        append_digit('7');
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        append_digit('4');
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        append_digit('1');
    }//GEN-LAST:event_btn1ActionPerformed

    private void btnChangeSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeSignActionPerformed
        lblError.setText("");
        if (declare_ans()){
            change_sign();
        }
    }//GEN-LAST:event_btnChangeSignActionPerformed

    private void btnSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSquareActionPerformed
        lblError.setText("");
        one_calc_buttons('2');
    }//GEN-LAST:event_btnSquareActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        append_digit('8');
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        append_digit('5');
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        append_digit('2');
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        append_digit('0');
    }//GEN-LAST:event_btn0ActionPerformed

    private void btnPowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerActionPerformed
        lblError.setText("");
        two_calc_buttons('^');
    }//GEN-LAST:event_btnPowerActionPerformed

    private void btnDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivActionPerformed
        lblError.setText("");
        two_calc_buttons('/');
    }//GEN-LAST:event_btnDivActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
        txfMain.setText("");
        operator_written = false;
    }//GEN-LAST:event_btnCActionPerformed

    private void btnMultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultActionPerformed
        lblError.setText("");
        two_calc_buttons('*');
    }//GEN-LAST:event_btnMultActionPerformed

    private void btnSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubActionPerformed
        lblError.setText("");
        two_calc_buttons('-');
    }//GEN-LAST:event_btnSubActionPerformed

    private void btnQubeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQubeActionPerformed
        lblError.setText("");
        one_calc_buttons('3');
    }//GEN-LAST:event_btnQubeActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        lblError.setText("");
        two_calc_buttons('+');
    }//GEN-LAST:event_btnAddActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        append_digit('9');
    }//GEN-LAST:event_btn9ActionPerformed

    private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed
        lblError.setText("");
        equals();
    }//GEN-LAST:event_btnEqualsActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        append_digit('6');
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        append_digit('3');
    }//GEN-LAST:event_btn3ActionPerformed

    private void btnDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecimalActionPerformed
        lblError.setText("");
        append_decimal();
    }//GEN-LAST:event_btnDecimalActionPerformed

    private void btnMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMCActionPerformed
        lblError.setText("");
        memory_cl();
    }//GEN-LAST:event_btnMCActionPerformed

    private void btnMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMRActionPerformed
        lblError.setText("");
        memory_re();
    }//GEN-LAST:event_btnMRActionPerformed

    private void btnMAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMAddActionPerformed
        lblError.setText("");
        memory_op('+');
    }//GEN-LAST:event_btnMAddActionPerformed

    private void btnMSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMSubActionPerformed
        lblError.setText("");
        memory_op('-');
    }//GEN-LAST:event_btnMSubActionPerformed

    private void btnSqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSqrtActionPerformed
        lblError.setText("");
        one_calc_buttons('s');
    }//GEN-LAST:event_btnSqrtActionPerformed
    
    
    
    /*
    Writes a character to txfMainField. For pressing any digit 0-9.
    
    @param append_digit the digit 0-9 to append
    */
    private void append_digit(char digit) {
        txfMain.setText(txfMain.getText() + digit);
    }
    
    /*
    Appends decimal to number currently being worked upon. Depending on if
    operator is written or not this is either the 0th or 2nd index of an 
    String[] of the split string. Only appends "." if none already is in it
    */
    private void append_decimal(){
        int index = 0;
        if (operator_written){
        index = 2;}
        
        String[] text_array = txfMain.getText().split(" ");
        if (text_array[index].contains(".")){
            lblError.setText("Kan bara ha en decimalpunkt");
            return;
        }
        else{
            text_array[index] = text_array[index] + ".";
        }
        
        String new_string = String.join(" ", text_array);
        txfMain.setText("" + new_string);
    }
    
    /*
    Writes an operator to txfMain, with spaces. Only does it if no operator
    has already been written though.
    
    operator_written needs to be reset after every calculation has been done.
    So everytime equals is run, wether manually with = buttons or automatically
    by using an operator when another has already been used (i.e boolean true)
    
    If clause like this:
    1. If no operator written and txfMain not empty (i.e prior number written
    thats possibly not ans) then simply append the operator. bool then true.
    
    2. If no operator written and txfMain is empty then append ans first and
    then the operator. bool then true.
    
    3. If an operator has been written and txfMain is not empty then carry out
    the operation by calling equals.
    
    @param operator The two value calculation operator (+, -, /, ^).
    */
    private void append_operator(char operator){
        if (!operator_written && !(txfMain.getText().equals(""))){
            txfMain.setText(txfMain.getText() + " " + operator + " ");
            operator_written = true;
        }
        else if (!operator_written && (txfMain.getText().equals(""))){
            txfMain.setText(ans_s + " " + operator + " ");
            operator_written = true;
        }
        else if (operator_written && !(txfMain.getText().equals(""))){
            equals(); // Resets OW
            txfMain.setText(ans_s + " " + operator + " ");
            operator_written = true;
        }
        else{
            lblError.setText("Okรคnt fel i append_operator");
        }
    }
    boolean operator_written = false;
    
    /*
    To be able to handle a no ans situation, ans_s is in String format. The
    purpose of this method is to set ans_s to a string representative of a
    double if ans_s is set to none and there is a value in txfMain that can be
    used as ans.
    
    The method itself is supposed to be called PRIOR to any calculation for this
    reason, i.e as an operator button is pressed but before any actual 
    calculation is done. So it acts as a failsafe to potentially assign an ans_s.
    
    This is done by calling it in the button actions methods. This method
    returns true if a valid ans_s either has been set or exists. The action
    method is then cancelled (return)
    */
    String ans_s = "none";
    
    private boolean declare_ans(){
        if (ans_s.equals("none") && !(txfMain.getText().equals(""))){
            ans_s = txfMain.getText();
            return true;
        }    
        else if (!(ans_s.equals("none"))){
            return true;
        }
        else if (ans_s.equals("none") && (txfMain.getText().equals(""))){
            lblError.setText("Kan inte initialisera ans med tomt fรคlt");
            return false;
        }
        else{
            lblError.setText("Okรคnt fel i declare_ans");
            return false;
        }
    }
    
        
        
        
    /*
    Only for use with two number calculations (add, sub, div, mult)
    
    Splits the mainfield string into first number, operator, and second number.
    Calculates according to 1st index string, the operator.
    */
    private void equals(){
        String[] main_sl = txfMain.getText().split(" ");
        
        Double ans_d = Double.valueOf(main_sl[0]);
        String operator = main_sl[1];
        Double tal_2 = Double.valueOf(main_sl[2]);

        
        double new_ans = 0;
        
        switch(operator){
                case "+":
                    new_ans = ans_d + tal_2;
                    break;
                case "-":
                    new_ans = ans_d - tal_2;
                    break;
                case "*":
                    new_ans = ans_d * tal_2;
                    break;
                case "/":
                    if (tal_2 == 0){
                        lblError.setText("Kan inte dividera med 0");
                        return;
                    }
                    else{
                    new_ans = ans_d / tal_2;
                    break;
                    }
                case "^":
                    new_ans = Math.pow(ans_d, tal_2);
        }
        
        String new_ans_s = Double.toString(new_ans);

        txfAns.setText(ans_d + " " + operator + " " + tal_2 + " = " + new_ans_s);
        ans_s =  new_ans_s;
        
        txfMain.setText("");
        operator_written = false;
        
        display_int();
    }
    
    
    /*
    For add, sub, div and mult. All two number based calculations. Called by
    button action.
    
    1. Check if ans does not exist and if so assign (if possible) with
    declare_ans()
    
    2. Append an operator to a number. append_operator adds ans if txfMain is
    empty (i.e "chaining")
    */
    private void two_calc_buttons(char operator){
        if (declare_ans()){
            append_operator(operator);
        }
    }
    
    
    
    
    /*
    Does a one number calculation (sqrt, 1/x, x^2, x^3) directly on number in
    txfMain, presuming its not empty and an operator is not written. Falls back
    on ans if txfMain is empty. Additionally it also does faculty calculation.
    
    @param operator A character representation for operations s: sqrt, /: 1/x,
    2: x^2, 3: x^3. Also !: faculty
    */
    private void one_calc(char operator){
        double ans_d = 0;
        double new_ans = 0;
        
        if (!operator_written && !(txfMain.getText().equals(""))){
            ans_d = Double.valueOf(txfMain.getText());
        }
        else if (!operator_written && (txfMain.getText().equals("")) && !(ans_s.equals("none"))){
            ans_d = Double.valueOf(ans_s);
        }
        else{
            lblError.setText("Krรคvs ett tal i fรคlt eller minne, och ingen operator skriven");
            return;
        }
        
        switch(operator){
            case('s'):
                if (ans_d >= 0){
                    new_ans = Math.sqrt(ans_d);
                    txfAns.setText("sqrt " + ans_d + " = " + new_ans);
                    ans_s = Double.toString(new_ans);
                    break;
                }
                else{
                    lblError.setText("Kan bara dra roten ur tal stรถrre รคn 0");
                    break;
                }
            case('/'):
                new_ans = 1 / ans_d;
                txfAns.setText(1 + " / " + ans_d + " = " + new_ans);
                ans_s = Double.toString(new_ans);
                break;
            case('2'):
                new_ans = ans_d * ans_d;
                txfAns.setText(ans_d + " ^ 2 = " + new_ans);
                ans_s = Double.toString(new_ans);
                break;
            case('3'):
                new_ans = Math.pow(ans_d, 3);
                txfAns.setText(ans_d + " ^ 3 = " + new_ans);
                ans_s = Double.toString(new_ans);
                break;
            case('!'):
                if (ans_d >= 0 && ans_d % 1 == 0.0){
                    new_ans = 1.0;
                    for (double i = ans_d; i > 0; i--){
                        new_ans *= i;
                    }
                    txfAns.setText(ans_d + " ! = " + new_ans);
                    ans_s = Double.toString(new_ans);
                    break;
                }
                else{
                    lblError.setText("n! funkar bara pรฅ positiva heltal");
                    break;
                }
        }
    }
    
    /*
    "Main" method for one-value calculations. Only runs them if an ans is found
    using declare_ans
    */
    private void one_calc_buttons(char operator){
        if (declare_ans()){
            one_calc(operator);
            display_int();
        }
    }
    
    
    
    
    /*
    Changes sign on the value currently being worked on which is either the one
    and only value if no operator is written, or the value after that if one is
    written. 
    
    Works by splitting txfMain content into an array, and then changing the sign
    of content at either index 2 or default index 0. If txfMain is empty then it
    first inserts ans_s.
    */
    private void change_sign(){
        int index = 0;
        
        if (operator_written){
            index = 2;
        }
        else if (txfMain.getText().equals("")){
            txfMain.setText(ans_s);
        }
        
        String[] text_array = txfMain.getText().split(" ");
        if (text_array[index].contains("-")){
            text_array[index] = text_array[index].replace("-", "");
        }
        else{
            text_array[index] = "-" + text_array[index];
        }
        
        String joined_string = String.join(" ", text_array);
        
        txfMain.setText(joined_string);
    }
    
    
    
    double memory_value = 0;
    
    /*
    Adds or subt a value on txfMain, or ans if txfMain is empty, to memory. 
    Prioritises txfMain value.
    
    Only works if no operator has been written.
    If clause like
    1. If txfMain is not empty and an operator has not been written then use
    that value
    2. If txfMain is empty and an ans exists, use ans
    3. If neither of above are possible, return and do nothing.
    
    If operation has been done, also sets the memory label to "visible".
    @param operator + or -, operate on memory.
    */
    private void memory_op(char operator){
        double tal = 0;
        
        if (!(txfMain.getText().equals("")) && !operator_written){
            tal = Double.valueOf(txfMain.getText());
        }
        else if (!(ans_s.equals("none")) && !operator_written){
            tal = Double.valueOf(ans_s);
        }
        else{
            lblError.setText("Krรคvs att operator inte รคr skriven, och ett ans vรคrde om fรคlt รคr tomt.");
            return;
        }
        
        switch (operator){
            case '+':
                memory_value += tal;
                break;
            case '-':
                memory_value -= tal;
                break;
        }
        
        lblMem.setBackground(Color.RED);
        lblMem.setText("M");
    }   
    
    /*
    Recalls memory value by printing it to txfMain. 
    */
    private void memory_re(){
        txfMain.setText(txfMain.getText() + memory_value);
    }
    
    /*
    "Cleans" memory by setting its value to 0. "Hides" the memory icon by
    removing its text and setting its background to null
    */
    private void memory_cl(){
        memory_value = 0;
        lblMem.setText("");
        lblMem.setBackground(null);
    }
    
    
    /*
    Rewrites txfAns so that every "integer" (otherwise with .0 decimal) is shown
    as an "integer" by removing its decimals.
    
    Works by splitting the entire txfAns content into a String[], and creating
    a new String[] of equal length. Then loops over each element. First tries
    to convert into a double. If this is unsuccesful (i.e operators) its
    instead immediately written to new String[]. Otherwise it checks if modulus
    of said double is 0, in which case its converted to int and back to string,
    and then written to new String[]. Otherwise just written back as a decimal
    double.
    */
    private void display_int(){
        String[] ans_array = txfAns.getText().split(" ");
        String[] new_array = new String[ans_array.length];
        
        for (int i = 0; i < ans_array.length; i++){
            try{
                double test_d = Double.valueOf(ans_array[i]);
                if (test_d % 1 == 0){
                    int temp_i = (int) test_d;
                    String test_s = Integer.toString(temp_i);
                    new_array[i] = test_s;
                }
                else{
                    new_array[i] = Double.toString(test_d);
                }
            }
            catch (NumberFormatException ex){
                new_array[i] = ans_array[i];
            }
        }
        
    String new_prev_string = String.join(" ", new_array);
    txfAns.setText(new_prev_string);
    }
    

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiniRaknareClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiniRaknareClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiniRaknareClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiniRaknareClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiniRaknareClass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnChangeSign;
    private javax.swing.JButton btnDecimal;
    private javax.swing.JButton btnDiv;
    private javax.swing.JButton btnDivByX;
    private javax.swing.JButton btnEquals;
    private javax.swing.JButton btnFak;
    private javax.swing.JButton btnMAdd;
    private javax.swing.JButton btnMC;
    private javax.swing.JButton btnMR;
    private javax.swing.JButton btnMSub;
    private javax.swing.JButton btnMult;
    private javax.swing.JButton btnPower;
    private javax.swing.JButton btnQube;
    private javax.swing.JButton btnSqrt;
    private javax.swing.JButton btnSquare;
    private javax.swing.JButton btnSub;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblMem;
    private javax.swing.JTextField txfAns;
    private javax.swing.JTextField txfMain;
    // End of variables declaration//GEN-END:variables
}
